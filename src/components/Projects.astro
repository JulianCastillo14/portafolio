---
import GitHubIcon from "./icons/GitHub.astro";
import React from "./icons/React.astro";
import Express from "./icons/Express.astro";
import Bootstrap from "./icons/Bootstrap.astro";
import MySQL from "./icons/MySQL.astro";
import HTML from "./icons/HTML.astro";
import CSS from "./icons/CSS.astro";
import JavaScript from "./icons/JavaScript.astro";
import Docker from "./icons/Docker.astro";
import Java from "./icons/Java.astro";
import SpringBoot from "./icons/SpringBoot.astro";
import PostgreSQL from "./icons/PostgreSQL.astro";
import Python from "./icons/Python.astro";
import MongoDB from "./icons/MongoDB.astro";
import InfluxDB from "./icons/InfluxDB.astro";
import MinIo from "./icons/MinIO.astro";
import EMQX from "./icons/EMQX.astro";
import RabbitMQ from "./icons/RabbitMQ.astro";

const TAGS = {
  REACT: {
    name: "React",
    icon: React,
  },
  EXPRESS: {
    name: "Express",
    icon: Express,
  },
  BOOTSTRAP: {
    name: "Bootstrap",
    icon: Bootstrap,
  },
  MYSQL: {
    name: "MySQL",
    icon: MySQL,
  },
  HTML: {
    name: "HTML",
    icon: HTML,
  },
  CSS: {
    name: "CSS",
    icon: CSS,
  },
  JAVASCRIPT: {
    name: "JavaScript",
    icon: JavaScript,
  },
  DOCKER: {
    name: "Docker",
    icon: Docker,
  },
  JAVA: {
    name: "Java",
    icon: Java,
  },
  SPRINGBOOT: {
    name: "Spring Boot",
    icon: SpringBoot,
  },
  POSTGRESQL: {
    name: "PostgreSQL",
    icon: PostgreSQL,
  },
  PYTHON: {
    name: "Python",
    icon: Python,
  },
  MONGODB: {
    name: "MongoDB",
    icon: MongoDB,
  },
  INFLUXDB: {
    name: "InfluxDB",
    icon: InfluxDB,
  },
  MINIO: {
    name: "MinIO",
    icon: MinIo,
  },
  EMQX: {
    name: "EMQX",
    icon: EMQX,
  },
  RABBITMQ: {
    name: "RabbitMQ",
    icon: RabbitMQ,
  },
};

const PROJECTS = [
  {
    title: "SaCars",
    description:
      "Es un sitio web diseñado para la gestión del catálogo de vehículos y la interacción con los clientes. SaCars permite a los usuarios explorar vehículos por categoría y marca, solicitar presupuestos y proporciona interfaces administrativas para gestionar el inventario, los clientes y los datos comerciales.",
    github: "https://github.com/JulianCastillo14/SaCars",
    image: [
      "https://res.cloudinary.com/dfuxpp1sb/image/upload/v1749856596/Inicio_g6ndxk.webp",
      "https://res.cloudinary.com/dfuxpp1sb/image/upload/v1749856686/Marcas_tpgnau.webp",
    ],
    tags: [
      TAGS.JAVASCRIPT,
      TAGS.REACT,
      TAGS.EXPRESS,
      TAGS.MYSQL,
      TAGS.HTML,
      TAGS.CSS,
      TAGS.BOOTSTRAP,
      TAGS.DOCKER,
    ],
    type: "web",
  },
  {
    title: "Salebook",
    description:
      "Es un sitio web diseñado para la gestión de libros, el cual permite a los clientes explorar libros, administrar carritos de compra, a la vez proprociona funciones administrativas para gestionar el inventario y los registros de los empleados. Este proyecto fue desarrollado en colaboración con mi compañero de universidad, Juan Camilo Lozada Garavito.",
    github: [
      "https://github.com/JulianCastillo14/SaleBook.git",
      "https://github.com/JulianCastillo14/Salebook-frontend.git",
    ],
    image: [
      "https://res.cloudinary.com/dfuxpp1sb/image/upload/v1750904701/inicio_znzyva.webp",
      "https://res.cloudinary.com/dfuxpp1sb/image/upload/v1750904877/administracion_ysl4pv.webp",
      "https://res.cloudinary.com/dfuxpp1sb/image/upload/v1750904878/perfil_srovka.webp",
    ],
    tags: [
      TAGS.JAVA,
      TAGS.SPRINGBOOT,
      TAGS.JAVASCRIPT,
      TAGS.REACT,
      TAGS.MYSQL,
      TAGS.HTML,
      TAGS.CSS,
    ],
    type: "web",
  },
  {
    title: "OPAR",
    description:
      "Es una aplicación móvil diseñada para el alquiler de inmuebles, existen dos roles principales: arrendatario y arrendador. Los arrendatarios pueden buscar inmuebles, ver detalles, opiniones, calificaciones y contactar a los arrendadores. Por otro lado, los arrendadores pueden publicar inmuebles, gestionar sus propiedades y responder a las consultas de los arrendatarios. El mótivo principal de este proyecto es facilitar la búsqueda y gestión de inmuebles en alquiler, proporcionando una plataforma eficiente y accesible para ambas partes. Este proyecto fue desarrollado en colaboración con mi compañero de universidad, Juan Camilo Lozada Garavito.",
    github: [
      "https://github.com/JulianCastillo14/OPAR-backend.git",
      "https://github.com/Juan-Garavito/OPAR-Frontend.git",
    ],
    image: [
      "https://res.cloudinary.com/dfuxpp1sb/image/upload/v1751335131/Buscar_drxnlr.webp",
      "https://res.cloudinary.com/dfuxpp1sb/image/upload/v1751335131/Catalogo_nri4ue.webp",
      "https://res.cloudinary.com/dfuxpp1sb/image/upload/v1751335343/Detalles_iwr9p6.webp",
    ],
    tags: [TAGS.JAVA, TAGS.SPRINGBOOT, TAGS.MYSQL],
    type: "mobile",
  },
  {
    title: "MediConnect",
    description:
      "Es una aplicación móvil diseñada para mejorar el acceso a la atención médica, mediante la programación de citas en modalidad remota y presencial. En esta aplicación existen dos roles principales: paciente y médico. Los pacientes pueden agendar, reprogramar o cancelar citas de forma sencilla, mientras que los médicos pueden revisar su agenda del día, gestionar citas a través de un chat en consultas remotas y llevar un registro de sus pacientes. Este proyecto fue desarrollado en colaboración con mis compañeros de universidad, Juan Camilo Lozada Garavito y Maximiliano Correa Pico.",
    github: [
      "https://github.com/Juan-Garavito/MediConnect-Backend.git",
      "https://github.com/Juan-Garavito/MediConnect-Frontend.git",
    ],
    image: [
      "https://res.cloudinary.com/dfuxpp1sb/image/upload/v1751392488/Inicio_mhqpah.webp",
      "https://res.cloudinary.com/dfuxpp1sb/image/upload/v1751392488/Citas_bhrnxq.webp",
      "https://res.cloudinary.com/dfuxpp1sb/image/upload/v1751392488/Chat_nhwprc.webp",
    ],
    tags: [TAGS.JAVA, TAGS.SPRINGBOOT, TAGS.POSTGRESQL],
    type: "mobile",
  },
  {
    title:
      "Detección de letras del abecedario del lenguaje de señas colombiano",
    description:
      "Es un proyecto de investigación que utiliza técnicas de visión por computador para detectar letras del abecedario del lenguaje de señas colombiano. El objetivo principal es facilitar la comunicación entre personas oyentes y sordas, proporcionando una herramienta que permita reconocer y traducir las letras del abecedario en tiempo real. Este proyecto fue desarrollado en colaboración con mis compañero de universidad, Juan Camilo Lozada Garavito y Andrés Felipe Mejía Perdomo.",
    github: "https://github.com/JulianCastillo14/project-IA2-2024-1.git",
    image: [
      "https://res.cloudinary.com/dfuxpp1sb/image/upload/v1751394906/Modelo_nykz78.png",
      "https://res.cloudinary.com/dfuxpp1sb/image/upload/v1751404082/Predicciones_dbac18.png",
    ],
    tags: [TAGS.PYTHON],
    type: "web",
  },
  {
    title: "Extensión módulo de datos de la plataforma Smart Campus UIS",
    description:
      "Este proyecto consiste en la mejora del módulo de gestión de datos de la plataforma Smart Campus UIS, con el objetivo de recibir, almacenar y redistribuir datos de dispositivos IoT. La propuesta surge ante las limitaciones del módulo actual, centrado solo en MQTT y una base de datos documental. Se implementó una arquitectura Onion para separar la lógica de negocio, con soporte para múltiples protocolos (AMQP, MQTT, RTSP, HTTP) y bases de datos especializadas: InfluxDB, MongoDB y MinIO. Este proyecto fue el presentado para obtener el título de ingeniero de sistemas en la Universidad Industrial de Santander y lo desarrollé con mi compañero Juan Camilo Lozada Garavito.",
    github: "https://github.com/JulianCastillo14/data_microservice.git",
    image: [
      "https://res.cloudinary.com/dfuxpp1sb/image/upload/v1751398190/Arquitectura_pzxifu.png",
    ],
    tags: [
      TAGS.JAVA,
      TAGS.SPRINGBOOT,
      TAGS.INFLUXDB,
      TAGS.MONGODB,
      TAGS.MINIO,
      TAGS.EMQX,
      TAGS.RABBITMQ,
      TAGS.DOCKER,
    ],
    type: "web",
  },
];
---

{
  PROJECTS.map((project) => (
    <article class="p-6 border-2 border-white rounded-lg mt-15">
      <h2 class="text-2xl text-[#00FF9C]  font-semibold mb-2 pb-5">
        {project.title}
      </h2>
      <p class="text-xl text-warp max-w-[728px] lg:max-w-[780px]">
        {project.description}
      </p>
      <div class="flex flex-col sm:flex-row items-center justify-start gap-4 mt-4">
        {Array.isArray(project.github) ? (
          <>
            <a
              href={project.github[0]}
              target="_blank"
              rel="noopener noreferrer"
              class="mt-10 rounded-full w-[250px] border border-white/10 flex justify-center items-center gap-x-2 px-4 mx-2 my-2 bg-white/5 hover:bg-white/10 transition-colors duration-300 h-10 shadow-md/20 shadow-[#00FF9C]"
            >
              <GitHubIcon class="size-6" />
              Código del Backend
            </a>
            <a
              href={project.github[1]}
              target="_blank"
              rel="noopener noreferrer"
              class="mt-10 rounded-full w-[250px] border border-white/10 flex justify-center items-center gap-x-2 px-4 mx-2 my-2 bg-white/5 hover:bg-white/10 transition-colors duration-300 h-10 shadow-md/20 shadow-[#00FF9C]"
            >
              <GitHubIcon class="size-6" />
              Código del Frontend
            </a>
          </>
        ) : (
          <a
            href={project.github}
            target="_blank"
            rel="noopener noreferrer"
            class="mt-10 rounded-full w-[250px] border border-white/10 flex justify-center items-center gap-x-2 px-4 mx-2 my-2 bg-white/5 hover:bg-white/10 transition-colors duration-300 h-10 shadow-md/20 shadow-[#00FF9C]"
          >
            <GitHubIcon class="size-6" />
            Código fuente
          </a>
        )}
      </div>
      <div
        class:list={[
          "flex items-center justify-center py-2", 
          project.type === "mobile" ? "flex-row" : "flex-col md:flex-col", 
          project.type === "mobile" ? "flex-wrap" : "", 
        ]}
      >
        {project.image.map((img) => (
          <img
            src={img}
            alt={project.title}
            class:list={[
              "mt-10 pt- mb-4 shadow-xl/20 shadow-[#00FF9C] rounded-lg",
              project.type === "web"
                ? "w-[500px] sm:w-[700px]" 
                : "sm:w-[240px] object-contain mx-4", 
              project.type === "mobile" ? "flex-shrink-0" : "", 
            ]}
          />
        ))}
      </div>

      <div class="">
        <h2 class="text-xl font-semibold mb-2 pb-5 mt-10">Stack utilizado</h2>
        <ul class="flex flex-wrap items-center justify-start max-w-[500px] lg:max-w-[700px]">
          {project.tags.map((tag) => (
            <li class="inline-flex items-center justify-center px-3 py-1 mr-2 mb-2 rounded-full border border-white/10 bg-white/5 h-10 gap-x-2 shadow-md/20 shadow-[#FFFFFF] mr-4 mt-3">
              <tag.icon class="size-4" />
              {tag.name}
            </li>
          ))}
        </ul>
      </div>
    </article>
  ))
}
